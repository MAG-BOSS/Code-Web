[{"C:\\Users\\Shikhar Kushwah\\Desktop\\projects-and-learnings\\Code-Editor\\editor\\src\\index.js":"1","C:\\Users\\Shikhar Kushwah\\Desktop\\projects-and-learnings\\Code-Editor\\editor\\src\\components\\Editor\\Editor.js":"2","C:\\Users\\Shikhar Kushwah\\Desktop\\projects-and-learnings\\Code-Editor\\editor\\src\\App\\App.js":"3","C:\\Users\\Shikhar Kushwah\\Desktop\\projects-and-learnings\\Code-Editor\\editor\\src\\components\\Questions\\Page.js":"4","C:\\Users\\Shikhar Kushwah\\Desktop\\projects-and-learnings\\Code-Editor\\editor\\src\\components\\Questions\\tasks\\Tasks.js":"5"},{"size":154,"mtime":1609152005932,"results":"6","hashOfConfig":"7"},{"size":1146,"mtime":1610013667174,"results":"8","hashOfConfig":"7"},{"size":1871,"mtime":1610362027199,"results":"9","hashOfConfig":"7"},{"size":1569,"mtime":1610362655209,"results":"10","hashOfConfig":"7"},{"size":3652,"mtime":1610365011454,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1qbquxi",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Shikhar Kushwah\\Desktop\\projects-and-learnings\\Code-Editor\\editor\\src\\index.js",[],["24","25"],"C:\\Users\\Shikhar Kushwah\\Desktop\\projects-and-learnings\\Code-Editor\\editor\\src\\components\\Editor\\Editor.js",[],"C:\\Users\\Shikhar Kushwah\\Desktop\\projects-and-learnings\\Code-Editor\\editor\\src\\App\\App.js",[],"C:\\Users\\Shikhar Kushwah\\Desktop\\projects-and-learnings\\Code-Editor\\editor\\src\\components\\Questions\\Page.js",["26"],"import React,{useState} from \"react\";\r\n\r\nimport {getTasks} from \"../Questions/tasks/Tasks\";\r\nimport \"./Page.css\";\r\n\r\nconst Page = ()=>{\r\n    const [userChoice, setUserChoice] = useState(1);\r\n    const handleChange = (e)=>{\r\n        setUserChoice(e.target.value);\r\n    }\r\n    const Tasks = getTasks();\r\n    return(\r\n        <div className=\"page\">\r\n            <div className=\"header\">\r\n                <h1>Question_{userChoice}</h1>\r\n                <div className=\"userChoice-list\">\r\n                    <form>\r\n                        <label>Choose :</label>\r\n                            <select name=\"qid\" id=\"userChoice\" onChange={handleChange} >\r\n                            {(Tasks).map(( prop ) => (<option value={prop.id}>{prop.id} | maxScore: {prop.maxScore}</option>))}\r\n                            </select>\r\n                    </form>\r\n                 </div>\r\n                 <div className=\"box\">\r\n\t                <a className=\"button\" href=\"#popup1\">Description</a>\r\n                </div>\r\n                <div id=\"popup1\" className=\"overlay\">\r\n\t                <div className=\"popup\">\r\n\t\t                <h2>{Tasks[userChoice-1].name}</h2>\r\n\t\t                <a className=\"close\" href=\"#\">&times;</a>\r\n\t\t                <div className=\"content\">\r\n\t\t\t                <p>{Tasks[userChoice-1].description}</p>\r\n\t\t                </div>\r\n\t                </div>\r\n                </div>\r\n            </div>\r\n            <iframe className=\"question-page\" srcDoc={Tasks[userChoice-1].src} title=\"question\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page;","C:\\Users\\Shikhar Kushwah\\Desktop\\projects-and-learnings\\Code-Editor\\editor\\src\\components\\Questions\\tasks\\Tasks.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":30,"column":19,"nodeType":"33","endLine":30,"endColumn":49},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]